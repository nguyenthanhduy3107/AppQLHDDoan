@model Mode.doanvien

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/Layout.cshtml";
}
@{
    WebImage photo1 = null;
    var imageSrc1 = "";
    var imagePath1 = "";
    if (IsPost)
    {
        photo1 = WebImage.GetImageFromRequest();
        if (photo1 != null)
        {
            imageSrc1 = Guid.NewGuid().ToString()
                + Path.GetFileName(photo1.FileName);
            imagePath1 = @"~\Content\Image\" + imageSrc1;
            photo1.Save(@"~/" + imagePath1);
        }

    }
}
<h2>Edit</h2>
<script type="text/javascript">

        function ShowPreview(input) {
            if (input.files && input.files[0]) {
                var ImageDir = new FileReader();
                ImageDir.onload = function(e) {
                    $('#impPrevu').attr('src', e.target.result);
                }
                ImageDir.readAsDataURL(input.files[0]);
            }
        }
</script>
@using (Html.BeginForm("Edit", "ThongTinDV", FormMethod.Post,
                            new
                            {
                                @class = "form-horizontal",
                                role = "form",
                                enctype = "multipart/form-data"
                            }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Đoàn viên</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.madv)

        <div class="form-group">
            @Html.Label("Họ tên", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.hoten, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.hoten, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Giới tính", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.gioitinh, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.gioitinh, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Ngày sinh", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ngaysinh, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ngaysinh, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Xã", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.xa, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.xa, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Huyện", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.huyen, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.huyen, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Dân tộc", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dantoc, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.dantoc, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Tôn giáo", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.tongiao, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.tongiao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Trình độ văn hóa", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.trinhdovh, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.trinhdovh, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Ngày vào đoàn", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ngayvaodoan, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ngayvaodoan, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label( "chidoan", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.chidoan, null, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.chidoan, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Chức vụ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.chucvu, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.chucvu, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Năm học", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.namhoc, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.namhoc, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Hình ảnh", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    byte[] photo = Model.hinhanh;
                    string imageSrc = null;
                    if (photo != null)
                    {
                        if (Model.hinhanh.Length > 21500)
                        {

                            <img id="impPrevu" src="data:image/png;base64,@Convert.ToBase64String(Model.hinhanh)"
                                 width="100" height="100" />

                        }
                        else
                        {
                            MemoryStream ms = new MemoryStream();
                            ms.Write(photo, 78, photo.Length - 78);
                            string imageBase64 = Convert.ToBase64String(ms.ToArray());
                            imageSrc = string.Format("data:image/*;base64,{0}", imageBase64);


                            <img src="@imageSrc" id="impPrevu" width="100" height="100" />
                        }
                        <input type="file" name="fileium" id="fileupload"
                               accept=".png,.jpg,.jpeg,.gif,.tif"
                               onchange="ShowPreview(this)" />
                    }
                    else
                    {
                        <img src="" id="impPrevu" width="100" height="100" />
                        <input type="file" name="fileium" id="fileupload"
                               accept=".png,.jpg,.jpeg,.gif,.tif"
                               onchange="ShowPreview(this)" />
                    }
                }
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Lưu" class="btn btn-default" />
            </div>
        </div>
    </div>
                    }

<div>
    @Html.ActionLink("Hủy", "Index")
</div>
